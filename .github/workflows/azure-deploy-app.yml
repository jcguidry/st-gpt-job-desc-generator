name: Deploy Python package to Azure Web App as a Linux web app.
on:
  [push]

env:
  AZURE_WEBAPP_NAME: LLM-Job-Desc-Generator-1
  WORKING_DIRECTORY: '.'
  PYTHON_VERSION: '3.8'
  ENV_NAME: 'gpt-streamlit-env'
  STARTUP_COMMAND: 'streamlit run app.py'
  RESOURCE_GROUP: 'AI_IC_LLM_Demos-1' # Add your Azure Resource Group

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Python Install
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        pip install virtualenv
        virtualenv -p ${{ env.PYTHON_VERSION }} ${{ env.ENV_NAME }}
        source ${{ env.ENV_NAME }}/bin/activate
        pip install -r requirements.txt

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Check if Azure Web App exists. If not, create new
    # https://learn.microsoft.com/en-us/cli/azure/webapp?view=azure-cli-latest#az-webapp-create
    - name: Check if Web App exists
      id: check_app
      run: |
        if az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}; then
          echo "Web App exists, will update it."
        else
          echo "Web App does not exist, will create it."
          az webapp create --resource-group ${{ env.RESOURCE_GROUP }} \
                           --plan ASP-LLM-Demos-1-01 \
                           --name ${{ env.AZURE_WEBAPP_NAME }} \
                           --runtime "PYTHON|${{ env.PYTHON_VERSION }}" \
                           --startup-command "${{ env.STARTUP_COMMAND }}"
        fi


    - uses: azure/appservice-settings@v1
      with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          mask-inputs: true
          general-settings-json: '{"linuxFxVersion": "PYTHON|${{ env.PYTHON_VERSION }}"}'
          app-settings-json: >
              {
                  "ENV_VAR_1": "Value1",
                  "ENV_VAR_2": "Value2",
                  "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
              }
  
    - uses: azure/webapps-deploy@v2
      with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.WORKING_DIRECTORY }}
          startup-command: ${{ env.STARTUP_COMMAND }}

    - name: Logout
      run: az logout